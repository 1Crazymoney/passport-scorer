name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      commit:
        description: "Commit ref"
        required: true
        type: string

jobs:
  test:
    runs-on: ubuntu-latest

    # Run a local ceramic nod to test against
    # services:
    #   ceramic:
    #     image: ceramicnetwork/js-ceramic:2.6.0-rc.1
    #     ports:
    #       - 7007:7007

    # env:
    #  CERAMIC_CLIENT_URL: http://127.0.0.1:7007

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4 
        with:
          python-version: '3.10'

      - name: Install pipenv
        run: pip3 install pipenv

      - name: Generate requirements.txt
        working-directory: ./api
        run: pipenv requirements --dev > requirements.txt

      - name: Install API dependencies
        working-directory: ./api
        run: pip3 install -r requirements.txt

      - name: Run API unittests
        working-directory: ./api
        run: coverage run --source='.' manage.py test

      - name: Python code coverage report
        working-directory: ./api
        run: coverage report --fail-under=70


  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4 
        with:
          python-version: '3.10'

      - name: Login to AWS ECR
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Deploy to Docker Hub ðŸš€
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.compute.outputs.docker_tag }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/web:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/web:buildcache,mode=max
